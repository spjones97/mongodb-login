{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => history.push(\"/login\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.reponse\n  }));\n}; // Login - get user token\n\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.reponse.data\n  }));\n}; // Set logged in user\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["C:/Users/Spencer/source/repos/mongodb-login/mern-auth/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","reponse","loginUser","token","data","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SACIC,UADJ,EAEIC,gBAFJ,EAGIC,YAHJ,QAIO,SAJP,C,CAMA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC3DT,EAAAA,KAAK,CACAU,IADL,CACU,qBADV,EACiCH,QADjC,EAEKI,IAFL,CAEUC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAFjB,EAGKC,KAHL,CAGWC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEb,UADD;AAELc,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,GAAD,CAJhB;AASH,CAVM,C,CAYP;;AACA,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,IAAIE,QAAQ,IAAI;AAC7CT,EAAAA,KAAK,CACAU,IADL,CACU,kBADV,EAC8BH,QAD9B,EAEKI,IAFL,CAEUC,GAAG,IAAI;AACT,UAAM;AAAEQ,MAAAA;AAAF,QAAYR,GAAG,CAACS,IAAtB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AAEAnB,IAAAA,YAAY,CAACmB,KAAD,CAAZ;AAEA,UAAMI,OAAO,GAAGtB,UAAU,CAACkB,KAAD,CAA1B;AAEAX,IAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GAXL,EAYKV,KAZL,CAYWC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEb,UADD;AAELc,IAAAA,OAAO,EAAEF,GAAG,CAACG,OAAJ,CAAYG;AAFhB,GAAD,CAbhB;AAkBH,CAnBM,C,CAqBP;;AACA,OAAO,MAAMI,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AACHR,IAAAA,IAAI,EAAEZ,gBADH;AAEHa,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAME,UAAU,GAAG,MAAMjB,QAAQ,IAAI;AACxCa,EAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AAEA1B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAQ,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CANM","sourcesContent":["import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/users/register\", userData)\r\n        .then(res => history.push(\"/login\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.reponse\r\n            })\r\n        );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/api/users/login\", userData)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            setAuthToken(token);\r\n\r\n            const decoded = jwt_decode(token);\r\n\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.reponse.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n\r\n    setAuthToken(false);\r\n\r\n    dispatch(setCurrentUser({}));\r\n};"]},"metadata":{},"sourceType":"module"}