{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Navbar","className","to","style","fontFamily","Component","Landing","height","width","borderRadius","letterSpacing","Register","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","props","registerUser","history","this","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","connect","userData","post","then","res","catch","err","reponse","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Dashboard","onLogoutClick","split","onClick","jwtToken","currentTime","Date","now","exp","location","href","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48d0a5b3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/users/register\", userData)\r\n        .then(res => history.push(\"/login\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.reponse.data\r\n            })\r\n        );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/api/users/login\", userData)\r\n        .then(res => {\r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n\r\n            setAuthToken(token);\r\n\r\n            const decoded = jwt_decode(token);\r\n\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.reponse.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n\r\n    setAuthToken(false);\r\n\r\n    dispatch(setCurrentUser({}));\r\n};","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            };\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\"\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar-fixed\">\r\n                <nav className=\"z-depth-0\">\r\n                    <div className=\"nav-wrapper white\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            style={{\r\n                                fontFamily: \"monospace\"\r\n                            }}\r\n                            className=\"col s5 brand-logo center black-text\"\r\n                        >\r\n                            <i className=\"material-icons\">code</i>\r\n                            MERN\r\n                        </Link>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Build</b> a login/auth app with the {\" \"}\r\n                            <span style={{ fontFamily: \"monospace\" }}>MERN</span> stack from scratch\r\n                        </h4>\r\n                        <p className=\"flow-text grey-text text-darken-1\">\r\n                            Create a (minimal) full-stack app with user authentication via passport and JWTs\r\n                        </p>\r\n                        <br></br>\r\n                        <div className=\"col s6\">\r\n                            <Link\r\n                                to=\"/register\"\r\n                                style={{\r\n                                    width: \"140px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\"\r\n                                }}\r\n                                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                            >\r\n                                Register\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <Link\r\n                                to=\"/login\"\r\n                                style={{\r\n                                    width: \"140px\",\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\"\r\n                                }}\r\n                                className=\"btn btn-large btn-flat waves-effect white black-text\"\r\n                            >\r\n                                Log In\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">keyboard_backspace</i> Back to home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Register</b> below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Already have an account? <Link to=\"/login\">Log In</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    error={errors.name}\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.name\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <span className=\"red-text\">{errors.name}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">{errors.email}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">{errors.password}</span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password2}\r\n                                    error={errors.password2}\r\n                                    id=\"password2\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password2\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <span className=\"red-text\">{errors.password2}</span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                    Sign Up\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n) (withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if(nextProps.error) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n\r\n        this.props.loginUser(userData);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                            <i className=\"material-icons left\">key_backspace</i> Back to home\r\n                        </Link>\r\n                        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                            <h4>\r\n                                <b>Login</b> below\r\n                            </h4>\r\n                            <p className=\"grey-text text-darken-1\">\r\n                                Don't have an account? <Link to=\"/register\">Register</Link>\r\n                            </p>\r\n                        </div>\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.email}\r\n                                    error={errors.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.email || errors.emailnotfound\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <span className=\"red-text\">\r\n                                    {errors.email}\r\n                                    {errors.emailnotfound}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.password}\r\n                                    error={errors.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.password || errors.passwordincorrect\r\n                                    })}\r\n                                />\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <span className=\"red-text\">\r\n                                    {errors.password}\r\n                                    {errors.passwordincorrect}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\"}}>\r\n                                <button\r\n                                    style={{\r\n                                        width: \"150px\",\r\n                                        borderRadius: \"3px\",\r\n                                        letterSpacing: \"1.5px\",\r\n                                        marginTop: \"1rem\"\r\n                                    }}\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n) (Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps) (PrivateRoute);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\n\r\nclass Dashboard extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    render() {\r\n        const { user } = this.props.auth;\r\n\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <h4>\r\n                            <b>Hey there,</b> {user.name.split(\" \")[0]}\r\n                            <p className=\"flow-text grey-text text-darken-1\">\r\n                                You are logged into a full-stack {\" \"}\r\n                                <span style={{ fontFamily: \"monospace\" }}>MERN</span>\r\n                            </p>\r\n                        </h4>\r\n                        <button\r\n                            style={{\r\n                                width: \"150px\",\r\n                                borderRadius: \"3px\",\r\n                                letterSpacing: \"1.5px\",\r\n                                marginTop: \"1rem\"\r\n                            }}\r\n                            onClick={this.onLogoutClick}\r\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                        >\r\n                            Log Out\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n) (Dashboard);","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\nif (localStorage.jwtToken) {\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}